{"version":3,"file":"guides.esm.js","sources":["../src/react-guides/utils.ts","../src/react-guides/consts.ts","../src/react-guides/Guides.tsx"],"sourcesContent":["import { prefixNames } from \"framework-utils\";\n\nexport function prefix(...classNames: string[]) {\n    return prefixNames(\"scena-\", ...classNames);\n}\n","import { prefix } from \"./utils\";\nimport { prefixCSS } from \"framework-utils\";\n\nexport const RULER = prefix(\"ruler\");\nexport const ADDER = prefix(\"guide\", \"adder\");\nexport const GUIDES = prefix(\"guides\");\nexport const GUIDE = prefix(\"guide\");\nexport const DRAGGING = prefix(\"dragging\");\nexport const DISPLAY_DRAG = prefix(\"display-drag\");\nexport const GUIDES_CSS = prefixCSS(\"scena-\", `\n{\n    position: relative;\n}\ncanvas {\n    position: relative;\n}\n.guides {\n    position: absolute;\n    top: 0;\n    left: 0;\n    will-change: transform;\n    z-index: 2000;\n}\n.display-drag {\n    position: absolute;\n    will-change: transform;\n    z-index: 2000;\n    font-weight: bold;\n    font-size: 12px;\n    display: none;\n    left: 20px;\n    top: -20px;\n    color: #f33;\n}\n:host.horizontal .guides {\n    width: 100%;\n    height: 0;\n    top: 30px;\n}\n:host.vertical .guides {\n    height: 100%;\n    width: 0;\n    left: 30px;\n}\n.guide {\n    position: absolute;\n    background: #f33;\n    z-index: 2;\n}\n.guide.dragging:before {\n    position: absolute;\n    content: \"\";\n    width: 100%;\n    height: 100%;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n:host.horizontal .guide {\n    width: 100%;\n    height: 1px;\n    cursor: row-resize;\n}\n:host.vertical .guide {\n    width: 1px;\n    height: 100%;\n    cursor: col-resize;\n}\n.mobile :host.horizontal .guide {\n    transform: scale(1, 2);\n}\n.mobile :host.vertical .guide {\n    transform: scale(2, 1);\n}\n:host.horizontal .guide:before {\n    height: 20px;\n}\n:host.vertical .guide:before {\n    width: 20px;\n}\n.adder {\n    display: none;\n}\n.adder.dragging {\n    display: block;\n}\n`);\n","import * as React from \"react\";\nimport Ruler from \"@scena/react-ruler\";\nimport { ref, refs } from \"framework-utils\";\nimport Dragger, { OnDragEnd } from \"@daybrush/drag\";\nimport styled, { StyledInterface } from \"react-css-styled\";\nimport { GUIDES, GUIDE, DRAGGING, ADDER, DISPLAY_DRAG, GUIDES_CSS } from \"./consts\";\nimport { prefix } from \"./utils\";\nimport { hasClass, addClass, removeClass } from \"@daybrush/utils\";\nimport { GuidesState, GuidesProps, GuidesInterface } from \"./types\";\n\nconst GuidesElement = styled(\"div\", GUIDES_CSS);\n\nexport default class Guides extends React.PureComponent<GuidesProps, GuidesState> implements GuidesInterface {\n    public static defaultProps: GuidesProps = {\n        className: \"\",\n        type: \"horizontal\",\n        setGuides: () => { },\n        zoom: 1,\n        style: { width: \"100%\", height: \"100%\" },\n        snapThreshold: 5,\n        snaps: [],\n        onChangeGuides: () => {},\n        onDragStart: () => {},\n        onDrag: () => {},\n        onDragEnd: () => {},\n        displayDragPos: false,\n        dragPosFormat: v => v,\n        defaultGuides: [],\n        showGuides: true,\n    };\n    public state: GuidesState = {\n        guides: [],\n    };\n    public adderElement!: HTMLElement;\n    public scrollPos: number = 0;\n    public ruler!: Ruler;\n    private manager!: StyledInterface;\n    private guidesElement!: HTMLElement;\n    private displayElement!: HTMLElement;\n    private dragger!: Dragger;\n    private guideElements: HTMLElement[] = [];\n\n    public render() {\n        const {\n            className,\n            type,\n            width,\n            height,\n            unit,\n            zoom,\n            style,\n            rulerStyle,\n            backgroundColor,\n            lineColor,\n            textColor,\n            direction,\n            displayDragPos,\n            cspNonce,\n        } = this.props as Required<GuidesProps>;\n        return <GuidesElement\n            ref={ref(this, \"manager\")}\n            cspNonce={cspNonce}\n            className={`${prefix(\"manager\", type)} ${className}`}\n            style={style}\n        >\n            <Ruler\n                ref={ref(this, \"ruler\")}\n                type={type}\n                width={width}\n                height={height}\n                unit={unit}\n                zoom={zoom}\n                backgroundColor={backgroundColor}\n                lineColor={lineColor}\n                style={rulerStyle}\n                textColor={textColor}\n                direction={direction}\n            />\n            <div className={GUIDES} ref={ref(this, \"guidesElement\")}>\n                {displayDragPos && <div className={DISPLAY_DRAG} ref={ref(this, \"displayElement\")} />}\n                <div className={ADDER} ref={ref(this, \"adderElement\")} />\n                {this.renderGuides()}\n            </div>\n        </GuidesElement>;\n    }\n    public renderGuides() {\n        const { type, zoom, showGuides } = this.props as Required<GuidesProps>;\n        const translateName = type === \"horizontal\" ? \"translateY\" : \"translateX\";\n        const guides = this.state.guides;\n\n        this.guideElements = [];\n        if(showGuides){\n        return guides.map((pos, i) => {\n            return (<div className={prefix(\"guide\", type)}\n                ref={refs(this, \"guideElements\", i)}\n                key={i}\n                data-index={i}\n                data-pos={pos}\n                style={{\n                    transform: `${translateName}(${pos * zoom}px)`,\n                }}></div>);\n        });\n      }else{\n        return (<div></div>)\n      }\n    }\n    public componentDidMount() {\n        this.dragger = new Dragger(\n            this.manager.getElement(), {\n            container: document.body,\n            dragstart: e => {\n                const target = e.inputEvent.target;\n                const datas = e.datas;\n\n                if (target === this.ruler.canvasElement) {\n                    e.datas.fromRuler = true;\n                    datas.target = this.adderElement;\n                } else if (!hasClass(target, GUIDE)) {\n                    return false;\n                } else {\n                    datas.target = target;\n                }\n                this.onDragStart(e);\n            },\n            drag: this.onDrag,\n            dragend: this.onDragEnd,\n        },\n        );\n        this.setState({guides: this.props.defaultGuides || []}); // pass array of guides on mount data to create gridlines or something like that in ui \n    }\n    public componentWillUnmount() {\n        this.dragger.unset();\n    }\n\n    public componentDidUpdate(prevProps: any) {\n      if (prevProps.defaultGuides !== this.props.defaultGuides) {\n        //to dynamically update guides from code rather than dragging guidelines\n        this.setState({guides: this.props.defaultGuides || []},()=>{\n          this.renderGuides();\n        });\n      }\n    }\n\n    /**\n     * Load the current guidelines.\n     * @memberof Guides\n     * @instance\n     */\n    public loadGuides(guides: number[]) {\n        this.setState({\n            guides,\n        });\n    }\n    /**\n     * Get current guidelines.\n     * @memberof Guides\n     * @instance\n     */\n    public getGuides(): number[] {\n        return this.state.guides;\n    }\n    /**\n     * Scroll the positions of the guidelines opposite the ruler.\n     * @memberof Guides\n     * @instance\n     */\n    public scrollGuides(pos: number) {\n        const { zoom } = this.props as Required<GuidesProps>;\n        const guidesElement = this.guidesElement;\n\n        this.scrollPos = pos;\n        guidesElement.style.transform = `${this.getTranslateName()}(${-pos * zoom}px)`;\n\n        const guides = this.state.guides;\n        this.guideElements.forEach((el, i) => {\n            if (!el) {\n                return;\n            }\n            el.style.display = -pos + guides[i] < 0 ? \"none\" : \"block\";\n        });\n    }\n    /**\n     * Recalculate the size of the ruler.\n     * @memberof Guides\n     * @instance\n     */\n    public resize() {\n        this.ruler.resize();\n    }\n    /**\n     * Scroll the position of the ruler.\n     * @memberof Guides\n     * @instance\n     */\n    public scroll(pos: number) {\n        this.ruler.scroll(pos);\n    }\n    private onDragStart = (e: any) => {\n        const { datas, clientX, clientY, inputEvent } = e;\n        const { type, onDragStart } = this.props;\n        const isHorizontal = type === \"horizontal\";\n        const rect = this.guidesElement.getBoundingClientRect();\n        datas.rect = rect;\n        datas.offset = isHorizontal ? rect.top : rect.left;\n\n        addClass(datas.target, DRAGGING);\n        this.onDrag({ datas, clientX, clientY });\n\n        /**\n         * When the drag starts, the dragStart event is called.\n         * @event dragStart\n         * @param {OnDragStart} - Parameters for the dragStart event\n         */\n        onDragStart!({\n            ...e,\n            dragElement: datas.target,\n        });\n        inputEvent.stopPropagation();\n        inputEvent.preventDefault();\n    }\n    private onDrag = (e: any) => {\n        const nextPos = this.movePos(e);\n\n        /**\n         * When dragging, the drag event is called.\n         * @event drag\n         * @param {OnDrag} - Parameters for the drag event\n         */\n        this.props.onDrag!({\n            ...e,\n            dragElement: e.datas.target,\n        });\n        return nextPos;\n    }\n    private onDragEnd = (e: OnDragEnd) => {\n        const { datas, clientX, clientY, isDouble, distX, distY } = e;\n        const pos = this.movePos({ datas, clientX, clientY });\n        const guides = this.state.guides;\n        const { setGuides, onChangeGuides, zoom, displayDragPos } = this.props;\n        const guidePos = Math.round(pos / zoom!);\n\n        if (displayDragPos) {\n            this.displayElement.style.cssText += `display: none;`;\n        }\n        removeClass(datas.target, DRAGGING);\n        /**\n         * When the drag finishes, the dragEnd event is called.\n         * @event dragEnd\n         * @param {OnDragEnd} - Parameters for the dragEnd event\n         */\n        this.props.onDragEnd!({\n            ...e,\n            dragElement: datas.target,\n        });\n         /**\n         * The `changeGuides` event occurs when the guideline is added / removed / changed.\n         * @memberof Guides\n         * @event changeGuides\n         * @param {OnChangeGuides} - Parameters for the changeGuides event\n         */\n        if (datas.fromRuler) {\n            if (pos >= this.scrollPos && guides.indexOf(guidePos) < 0) {\n                this.setState({\n                    guides: [...guides, guidePos],\n                }, () => {\n                    onChangeGuides!({\n                        guides: this.state.guides,\n                        distX,\n                        distY,\n                    });\n                    setGuides!(this.state.guides);\n                });\n            }\n        } else {\n            const index = datas.target.getAttribute(\"data-index\");\n\n            if (isDouble || pos < this.scrollPos) {\n                guides.splice(index, 1);\n            } else if (guides.indexOf(guidePos) > -1) {\n                return;\n            } else {\n                guides[index] = guidePos;\n            }\n            this.setState({\n                guides: [...guides],\n            }, () => {\n                const nextGuides = this.state.guides;\n                setGuides!(nextGuides);\n                onChangeGuides!({\n                    distX,\n                    distY,\n                    guides: nextGuides,\n                });\n            });\n        }\n    }\n    private movePos(e: any) {\n        const { datas, clientX, clientY } = e;\n        const {\n            type, zoom, snaps, snapThreshold,\n            displayDragPos, dragPosFormat,\n        } = this.props;\n        const isHorizontal = type === \"horizontal\";\n        let nextPos = Math.round((isHorizontal ? clientY : clientX) - datas.offset);\n        let guidePos = Math.round(nextPos / zoom!);\n        const guideSnaps = snaps!.slice().sort((a, b) => {\n            return Math.abs(guidePos - a) - Math.abs(guidePos - b);\n        });\n\n        if (guideSnaps.length && Math.abs(guideSnaps[0] - guidePos) < snapThreshold!) {\n            guidePos = guideSnaps[0];\n            nextPos = guidePos * zoom!;\n        }\n        if (displayDragPos) {\n            const rect = datas.rect;\n            const displayPos = type === \"horizontal\"\n                ? [clientX - rect.left, guidePos]\n                : [guidePos, clientY - rect.top];\n            this.displayElement.style.cssText += `display: block;transform: translate(-50%, -50%) translate(${\n                displayPos.map(v => `${v}px`).join(\", \")\n            })`;\n            this.displayElement.innerHTML = `${dragPosFormat!(guidePos)}`;\n        }\n        datas.target.setAttribute(\"data-pos\", guidePos);\n        datas.target.style.transform = `${this.getTranslateName()}(${nextPos}px)`;\n\n        return nextPos;\n\n    }\n    private getTranslateName() {\n        return this.props.type === \"horizontal\" ? \"translateY\" : \"translateX\";\n    }\n}\n"],"names":["prefix","_i","classNames","prefixNames","RULER","ADDER","GUIDES","GUIDE","DRAGGING","DISPLAY_DRAG","GUIDES_CSS","prefixCSS","GuidesElement","styled","tslib_1","_this","guides","e","datas","clientX","clientY","inputEvent","_a","type","onDragStart","isHorizontal","rect","guidesElement","getBoundingClientRect","offset","top","left","addClass","target","onDrag","dragElement","stopPropagation","preventDefault","nextPos","movePos","props","isDouble","distX","distY","pos","state","setGuides","onChangeGuides","zoom","displayDragPos","guidePos","Math","round","displayElement","style","cssText","removeClass","onDragEnd","fromRuler","scrollPos","indexOf","setState","index","getAttribute","splice","nextGuides","className","width","height","unit","rulerStyle","backgroundColor","lineColor","textColor","direction","cspNonce","React","ref","Ruler","renderGuides","showGuides","translateName","guideElements","map","i","refs","key","transform","dragger","Dragger","manager","getElement","container","document","body","dragstart","ruler","canvasElement","adderElement","hasClass","drag","dragend","defaultGuides","unset","prevProps","getTranslateName","forEach","el","display","resize","scroll","snaps","snapThreshold","dragPosFormat","guideSnaps","slice","sort","a","b","abs","length","displayPos","v","join","innerHTML","setAttribute","Guides"],"mappings":"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"}